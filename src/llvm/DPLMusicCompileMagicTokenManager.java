/* Generated By:JJTree&JavaCC: Do not edit this line. DPLMusicCompileMagicTokenManager.java */
package llvm;
import audioSynthesis.OpenFile;
import java.util.Scanner;
import java.io.Reader;
import java.io.StringReader;

/** Token Manager. */
public class DPLMusicCompileMagicTokenManager implements DPLMusicCompileMagicConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_0(0, 5, 215);
      case 34:
         return jjStartNfaWithStates_0(0, 7, 218);
      case 40:
         return jjStartNfaWithStates_0(0, 3, 352);
      case 41:
         return jjStopAtPos(0, 4);
      default :
         return jjMoveNfa_0(220, 0);
   }
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 352;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 220:
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjCheckNAddStates(0, 3);
                  }
                  else if (curChar == 32)
                     jjCheckNAddStates(4, 11);
                  else if (curChar == 40)
                     jjCheckNAddStates(12, 15);
                  else if (curChar == 34)
                     jjCheckNAdd(218);
                  else if (curChar == 9)
                     jjCheckNAddStates(16, 18);
                  else if (curChar == 39)
                     jjCheckNAdd(1);
                  break;
               case 352:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(226, 306);
                  else if (curChar == 32)
                     jjCheckNAddStates(19, 38);
                  else if (curChar == 44)
                     jjCheckNAddStates(12, 15);
                  break;
               case 215:
                  if (curChar == 32)
                     jjCheckNAddStates(39, 46);
                  else if (curChar == 39)
                     jjCheckNAdd(43);
                  break;
               case 0:
                  if (curChar == 39)
                     jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar != 44)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddTwoStates(2, 3);
                  break;
               case 3:
                  if (curChar != 46)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAdd(3);
                  break;
               case 4:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(47, 67);
                  break;
               case 5:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(5, 6);
                  break;
               case 7:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(1, 8);
                  break;
               case 9:
                  if (curChar == 39)
                     jjCheckNAdd(8);
                  break;
               case 10:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(68, 79);
                  break;
               case 11:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(11, 12);
                  break;
               case 13:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(80, 91);
                  break;
               case 14:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(14, 15);
                  break;
               case 16:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 18:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(92, 103);
                  break;
               case 19:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 21:
                  if (curChar != 33)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(104, 109);
                  break;
               case 23:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(110, 121);
                  break;
               case 24:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(24, 9);
                  break;
               case 27:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(122, 142);
                  break;
               case 28:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(28, 29);
                  break;
               case 30:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 32:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(143, 163);
                  break;
               case 33:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(33, 34);
                  break;
               case 35:
                  if (curChar != 33)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(164, 169);
                  break;
               case 37:
                  if (curChar != 32)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(170, 190);
                  break;
               case 38:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(38, 0);
                  break;
               case 41:
                  if (curChar == 9)
                     jjCheckNAddStates(16, 18);
                  break;
               case 42:
                  if (curChar == 39)
                     jjCheckNAdd(43);
                  break;
               case 44:
                  if (curChar == 44)
                     jjCheckNAddStates(191, 196);
                  break;
               case 45:
                  if (curChar == 46)
                     jjCheckNAddStates(197, 201);
                  break;
               case 46:
                  if ((0x2400L & l) != 0L)
                     jjCheckNAddStates(202, 205);
                  break;
               case 47:
                  if (curChar == 39)
                     jjCheckNAdd(48);
                  break;
               case 49:
                  if (curChar != 44)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(206, 211);
                  break;
               case 50:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(212, 216);
                  break;
               case 51:
                  if (curChar != 46)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(217, 220);
                  break;
               case 52:
                  if (curChar == 32)
                     jjCheckNAddStates(221, 228);
                  break;
               case 53:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(53, 54);
                  break;
               case 55:
                  if (curChar != 46)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(229, 237);
                  break;
               case 58:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if (curChar == 39)
                     jjCheckNAddStates(238, 240);
                  break;
               case 62:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(241, 270);
                  break;
               case 63:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(63, 57);
                  break;
               case 64:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 66:
                  if (curChar != 33)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(271, 277);
                  break;
               case 69:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 71:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(278, 307);
                  break;
               case 72:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(72, 47);
                  break;
               case 73:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(73, 74);
                  break;
               case 75:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(308, 337);
                  break;
               case 76:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(76, 68);
                  break;
               case 77:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 79:
                  if (curChar != 33)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(338, 344);
                  break;
               case 80:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(345, 374);
                  break;
               case 81:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(81, 82);
                  break;
               case 82:
                  if (curChar == 39)
                     jjCheckNAdd(61);
                  break;
               case 83:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(83, 84);
                  break;
               case 85:
                  if (curChar != 44)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(375, 379);
                  break;
               case 86:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(48, 87);
                  break;
               case 88:
                  if (curChar != 46)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(380, 387);
                  break;
               case 89:
                  if (curChar == 32)
                     jjCheckNAddStates(388, 403);
                  break;
               case 90:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(90, 91);
                  break;
               case 92:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 94:
                  if (curChar == 39)
                     jjCheckNAddStates(404, 406);
                  break;
               case 96:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(407, 435);
                  break;
               case 97:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(97, 98);
                  break;
               case 99:
                  if (curChar != 33)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(436, 441);
                  break;
               case 102:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 104:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(442, 470);
                  break;
               case 105:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 106:
                  if (curChar == 39)
                     jjCheckNAdd(87);
                  break;
               case 107:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(107, 108);
                  break;
               case 109:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(471, 499);
                  break;
               case 110:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(110, 101);
                  break;
               case 111:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(111, 112);
                  break;
               case 113:
                  if (curChar != 33)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(500, 505);
                  break;
               case 114:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(506, 534);
                  break;
               case 115:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 116:
                  if (curChar == 39)
                     jjCheckNAdd(95);
                  break;
               case 118:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(535, 563);
                  break;
               case 119:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(564, 592);
                  break;
               case 120:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(593, 622);
                  break;
               case 121:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(623, 652);
                  break;
               case 123:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(653, 681);
                  break;
               case 126:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(682, 710);
                  break;
               case 130:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(711, 740);
                  break;
               case 132:
                  if (curChar != 32)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(741, 770);
                  break;
               case 134:
                  if (curChar == 32)
                     jjCheckNAddStates(771, 786);
                  break;
               case 135:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(135, 136);
                  break;
               case 137:
                  if (curChar == 39)
                     jjCheckNAddStates(787, 789);
                  break;
               case 139:
                  if (curChar == 32)
                     jjCheckNAddStates(790, 819);
                  break;
               case 140:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(140, 141);
                  break;
               case 142:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 144:
                  if (curChar == 32)
                     jjCheckNAddStates(820, 849);
                  break;
               case 145:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(145, 146);
                  break;
               case 147:
                  if (curChar == 33)
                     jjCheckNAddStates(850, 856);
                  break;
               case 150:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 152:
                  if (curChar == 32)
                     jjCheckNAddStates(857, 886);
                  break;
               case 153:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(153, 42);
                  break;
               case 154:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(154, 155);
                  break;
               case 156:
                  if (curChar == 32)
                     jjCheckNAddStates(887, 916);
                  break;
               case 157:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(157, 149);
                  break;
               case 158:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(158, 159);
                  break;
               case 160:
                  if (curChar == 33)
                     jjCheckNAddStates(917, 923);
                  break;
               case 161:
                  if (curChar == 32)
                     jjCheckNAddStates(924, 953);
                  break;
               case 162:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(162, 163);
                  break;
               case 163:
                  if (curChar == 39)
                     jjCheckNAdd(138);
                  break;
               case 164:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(164, 165);
                  break;
               case 166:
                  if (curChar == 44)
                     jjCheckNAddStates(954, 959);
                  break;
               case 167:
                  if (curChar == 39)
                     jjCheckNAdd(168);
                  break;
               case 169:
                  if (curChar == 46)
                     jjCheckNAddStates(960, 964);
                  break;
               case 170:
                  if (curChar == 32)
                     jjCheckNAddStates(965, 972);
                  break;
               case 171:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(171, 172);
                  break;
               case 173:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 175:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(168, 176);
                  break;
               case 177:
                  if (curChar == 32)
                     jjCheckNAddStates(973, 994);
                  break;
               case 178:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(178, 179);
                  break;
               case 180:
                  if (curChar == 33)
                     jjCheckNAddStates(995, 1001);
                  break;
               case 183:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 185:
                  if (curChar == 32)
                     jjCheckNAddStates(1002, 1023);
                  break;
               case 186:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(186, 167);
                  break;
               case 187:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(187, 188);
                  break;
               case 189:
                  if (curChar == 32)
                     jjCheckNAddStates(1024, 1045);
                  break;
               case 190:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(190, 182);
                  break;
               case 191:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(191, 192);
                  break;
               case 193:
                  if (curChar == 33)
                     jjCheckNAddStates(1046, 1052);
                  break;
               case 194:
                  if (curChar == 32)
                     jjCheckNAddStates(1053, 1074);
                  break;
               case 195:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(195, 196);
                  break;
               case 196:
                  if (curChar == 39)
                     jjCheckNAdd(176);
                  break;
               case 198:
                  if (curChar == 32)
                     jjCheckNAddStates(1075, 1096);
                  break;
               case 199:
                  if (curChar == 32)
                     jjCheckNAddStates(1097, 1118);
                  break;
               case 201:
                  if (curChar == 32)
                     jjCheckNAddStates(1119, 1140);
                  break;
               case 204:
                  if (curChar == 32)
                     jjCheckNAddStates(1141, 1162);
                  break;
               case 207:
                  if (curChar == 32)
                     jjCheckNAddStates(1163, 1192);
                  break;
               case 208:
                  if (curChar == 32)
                     jjCheckNAddStates(1193, 1222);
                  break;
               case 212:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(43, 168);
                  break;
               case 213:
                  if (curChar == 32)
                     jjCheckNAddStates(1223, 1252);
                  break;
               case 217:
                  if (curChar == 34)
                     jjCheckNAdd(218);
                  break;
               case 218:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(218, 219);
                  break;
               case 219:
                  if (curChar != 34)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(217);
                  break;
               case 221:
                  if (curChar == 44)
                     jjCheckNAddStates(12, 15);
                  break;
               case 222:
                  if (curChar == 32)
                     jjCheckNAddStates(19, 38);
                  break;
               case 223:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(223, 224);
                  break;
               case 225:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(226, 306);
                  break;
               case 227:
                  if (curChar == 32)
                     jjCheckNAddStates(1253, 1273);
                  break;
               case 228:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 230:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 232:
                  if (curChar == 32)
                     jjCheckNAddStates(1274, 1296);
                  break;
               case 233:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(233, 234);
                  break;
               case 235:
                  if (curChar == 33)
                     jjCheckNAddStates(1297, 1301);
                  break;
               case 238:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 240:
                  if (curChar == 44)
                     jjCheckNAddStates(1302, 1306);
                  break;
               case 241:
                  if ((0x2400L & l) != 0L)
                     jjCheckNAddStates(1307, 1310);
                  break;
               case 242:
                  if (curChar == 39)
                     jjCheckNAdd(243);
                  break;
               case 244:
                  if (curChar == 41 && kind > 20)
                     kind = 20;
                  break;
               case 245:
                  if (curChar == 44)
                     jjCheckNAddStates(1311, 1320);
                  break;
               case 246:
                  if (curChar == 32)
                     jjCheckNAddStates(1321, 1350);
                  break;
               case 247:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(247, 248);
                  break;
               case 249:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(250, 243);
                  break;
               case 251:
                  if (curChar == 32)
                     jjCheckNAddStates(1351, 1371);
                  break;
               case 252:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(252, 253);
                  break;
               case 254:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 256:
                  if (curChar == 32)
                     jjCheckNAddStates(1372, 1392);
                  break;
               case 257:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(257, 258);
                  break;
               case 259:
                  if (curChar == 33)
                     jjCheckNAddStates(1393, 1398);
                  break;
               case 262:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 264:
                  if (curChar == 39)
                     jjCheckNAddStates(1399, 1401);
                  break;
               case 266:
                  if (curChar == 32)
                     jjCheckNAddStates(1402, 1432);
                  break;
               case 267:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(267, 268);
                  break;
               case 268:
                  if (curChar == 39)
                     jjCheckNAdd(250);
                  break;
               case 269:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(269, 270);
                  break;
               case 271:
                  if (curChar == 32)
                     jjCheckNAddStates(1433, 1466);
                  break;
               case 272:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(272, 261);
                  break;
               case 273:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(273, 274);
                  break;
               case 275:
                  if (curChar == 33)
                     jjCheckNAddStates(1467, 1473);
                  break;
               case 278:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 280:
                  if (curChar == 32)
                     jjCheckNAddStates(1474, 1507);
                  break;
               case 281:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(281, 242);
                  break;
               case 282:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(282, 283);
                  break;
               case 284:
                  if (curChar == 32)
                     jjCheckNAddStates(1508, 1541);
                  break;
               case 285:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(285, 277);
                  break;
               case 286:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(286, 287);
                  break;
               case 288:
                  if (curChar == 33)
                     jjCheckNAddStates(1542, 1548);
                  break;
               case 289:
                  if (curChar == 32)
                     jjCheckNAddStates(1549, 1582);
                  break;
               case 290:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(290, 291);
                  break;
               case 291:
                  if (curChar == 39)
                     jjCheckNAdd(265);
                  break;
               case 293:
                  if (curChar == 32)
                     jjCheckNAddStates(1583, 1616);
                  break;
               case 294:
                  if (curChar == 32)
                     jjCheckNAddStates(1617, 1637);
                  break;
               case 295:
                  if (curChar == 32)
                     jjCheckNAddStates(1638, 1658);
                  break;
               case 297:
                  if (curChar == 32)
                     jjCheckNAddStates(1659, 1692);
                  break;
               case 301:
                  if (curChar == 32)
                     jjCheckNAddStates(1693, 1700);
                  break;
               case 303:
                  if (curChar == 32)
                     jjCheckNAddStates(1701, 1734);
                  break;
               case 305:
                  if (curChar == 39)
                     jjCheckNAddStates(1735, 1738);
                  break;
               case 307:
                  if (curChar == 32)
                     jjCheckNAddStates(1739, 1779);
                  break;
               case 308:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(308, 309);
                  break;
               case 310:
                  if (curChar == 32)
                     jjCheckNAddStates(1780, 1820);
                  break;
               case 311:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(311, 237);
                  break;
               case 312:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(312, 313);
                  break;
               case 314:
                  if (curChar == 33)
                     jjCheckNAddStates(1821, 1827);
                  break;
               case 317:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 319:
                  if (curChar == 32)
                     jjCheckNAddStates(1828, 1866);
                  break;
               case 320:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(320, 321);
                  break;
               case 321:
                  if (curChar == 39)
                     jjCheckNAdd(306);
                  break;
               case 322:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(322, 323);
                  break;
               case 324:
                  if (curChar == 32)
                     jjCheckNAddStates(1867, 1905);
                  break;
               case 325:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(325, 316);
                  break;
               case 326:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(326, 327);
                  break;
               case 328:
                  if (curChar == 33)
                     jjCheckNAddStates(1906, 1912);
                  break;
               case 329:
                  if (curChar == 32)
                     jjCheckNAddStates(1913, 1951);
                  break;
               case 330:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(330, 331);
                  break;
               case 331:
                  if (curChar == 39)
                     jjCheckNAdd(332);
                  break;
               case 333:
                  if (curChar == 32)
                     jjCheckNAddStates(1952, 1990);
                  break;
               case 334:
                  if (curChar == 32)
                     jjCheckNAddStates(1991, 2028);
                  break;
               case 336:
                  if (curChar == 32)
                     jjCheckNAddStates(2029, 2069);
                  break;
               case 339:
                  if (curChar == 32)
                     jjCheckNAddStates(2070, 2110);
                  break;
               case 341:
                  if (curChar == 32)
                     jjCheckNAddStates(2111, 2133);
                  break;
               case 342:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(342, 343);
                  break;
               case 343:
                  if (curChar == 39)
                     jjCheckNAdd(226);
                  break;
               case 344:
                  if (curChar == 32)
                     jjCheckNAddStates(2134, 2156);
                  break;
               case 347:
                  if (curChar == 32)
                     jjCheckNAddStates(4, 11);
                  break;
               case 349:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddStates(0, 3);
                  break;
               case 350:
                  if ((0x2400L & l) != 0L)
                     jjCheckNAddTwoStates(350, 41);
                  break;
               case 351:
                  if ((0x2400L & l) != 0L)
                     jjCheckNAddTwoStates(351, 217);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 220:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2157, 2166);
                  break;
               case 352:
               case 236:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2167, 2186);
                  break;
               case 215:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2187, 2197);
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2198, 2202);
                  break;
               case 6:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2203, 2207);
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2208, 2212);
                  break;
               case 12:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2213, 2217);
                  break;
               case 15:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(15, 16);
                  break;
               case 17:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2218, 2222);
                  break;
               case 20:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2223, 2228);
                  break;
               case 22:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2229, 2238);
                  break;
               case 25:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2239, 2250);
                  break;
               case 26:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2251, 2262);
                  break;
               case 29:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(29, 30);
                  break;
               case 31:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2263, 2267);
                  break;
               case 34:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2268, 2273);
                  break;
               case 36:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2274, 2291);
                  break;
               case 39:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2292, 2311);
                  break;
               case 40:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 15)
                     kind = 15;
                  jjCheckNAddStates(2312, 2331);
                  break;
               case 43:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2332, 2337);
                  break;
               case 48:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2338, 2343);
                  break;
               case 54:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2344, 2349);
                  break;
               case 56:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2350, 2360);
                  break;
               case 57:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(57, 58);
                  break;
               case 59:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2361, 2366);
                  break;
               case 61:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2367, 2372);
                  break;
               case 65:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2373, 2379);
                  break;
               case 67:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2380, 2408);
                  break;
               case 68:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 70:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2409, 2414);
                  break;
               case 74:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2415, 2420);
                  break;
               case 78:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2421, 2427);
                  break;
               case 84:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2428, 2432);
                  break;
               case 87:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2433, 2437);
                  break;
               case 91:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 93:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2438, 2442);
                  break;
               case 95:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2443, 2447);
                  break;
               case 98:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2448, 2453);
                  break;
               case 100:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2454, 2482);
                  break;
               case 101:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(101, 102);
                  break;
               case 103:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2483, 2487);
                  break;
               case 108:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2488, 2492);
                  break;
               case 112:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2493, 2498);
                  break;
               case 117:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2499, 2529);
                  break;
               case 122:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2530, 2560);
                  break;
               case 124:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2561, 2591);
                  break;
               case 125:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2592, 2612);
                  break;
               case 127:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2613, 2643);
                  break;
               case 128:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2644, 2674);
                  break;
               case 129:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2675, 2705);
                  break;
               case 131:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2706, 2736);
                  break;
               case 133:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 18)
                     kind = 18;
                  jjCheckNAddStates(2737, 2767);
                  break;
               case 136:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2768, 2773);
                  break;
               case 138:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2774, 2779);
                  break;
               case 141:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(141, 142);
                  break;
               case 143:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2780, 2785);
                  break;
               case 146:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2786, 2792);
                  break;
               case 148:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2793, 2821);
                  break;
               case 149:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(149, 150);
                  break;
               case 151:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2822, 2827);
                  break;
               case 155:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2828, 2833);
                  break;
               case 159:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2834, 2840);
                  break;
               case 165:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2841, 2846);
                  break;
               case 168:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2847, 2852);
                  break;
               case 172:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(172, 173);
                  break;
               case 174:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2853, 2858);
                  break;
               case 176:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2859, 2864);
                  break;
               case 179:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2865, 2871);
                  break;
               case 181:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2872, 2890);
                  break;
               case 182:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(182, 183);
                  break;
               case 184:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2891, 2896);
                  break;
               case 188:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2897, 2902);
                  break;
               case 192:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2903, 2909);
                  break;
               case 197:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2910, 2930);
                  break;
               case 200:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2931, 2951);
                  break;
               case 202:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2952, 2972);
                  break;
               case 203:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2973, 2983);
                  break;
               case 205:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(2984, 3004);
                  break;
               case 206:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3005, 3035);
                  break;
               case 209:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3036, 3066);
                  break;
               case 210:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3067, 3097);
                  break;
               case 211:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3098, 3118);
                  break;
               case 214:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3119, 3149);
                  break;
               case 218:
                  jjAddStates(3150, 3151);
                  break;
               case 224:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3152, 3155);
                  break;
               case 226:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3156, 3159);
                  break;
               case 229:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(229, 230);
                  break;
               case 231:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3160, 3163);
                  break;
               case 234:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3164, 3168);
                  break;
               case 237:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(237, 238);
                  break;
               case 239:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3169, 3174);
                  break;
               case 243:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3175, 3180);
                  break;
               case 248:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3181, 3185);
                  break;
               case 250:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3186, 3190);
                  break;
               case 253:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(253, 254);
                  break;
               case 255:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3191, 3195);
                  break;
               case 258:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3196, 3201);
                  break;
               case 260:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3202, 3221);
                  break;
               case 261:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(261, 262);
                  break;
               case 263:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3222, 3227);
                  break;
               case 265:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3228, 3233);
                  break;
               case 270:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3234, 3239);
                  break;
               case 274:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3240, 3246);
                  break;
               case 276:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3247, 3275);
                  break;
               case 277:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(277, 278);
                  break;
               case 279:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3276, 3281);
                  break;
               case 283:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3282, 3287);
                  break;
               case 287:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3288, 3294);
                  break;
               case 292:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3295, 3325);
                  break;
               case 296:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3326, 3358);
                  break;
               case 298:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3359, 3389);
                  break;
               case 299:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3390, 3411);
                  break;
               case 300:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3412, 3433);
                  break;
               case 302:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3434, 3444);
                  break;
               case 304:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3445, 3475);
                  break;
               case 306:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3476, 3481);
                  break;
               case 309:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3482, 3487);
                  break;
               case 313:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3488, 3494);
                  break;
               case 315:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3495, 3530);
                  break;
               case 316:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(316, 317);
                  break;
               case 318:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3531, 3536);
                  break;
               case 323:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3537, 3542);
                  break;
               case 327:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3543, 3549);
                  break;
               case 332:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3550, 3555);
                  break;
               case 335:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3556, 3593);
                  break;
               case 337:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3594, 3631);
                  break;
               case 338:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3632, 3669);
                  break;
               case 340:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3670, 3707);
                  break;
               case 345:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3708, 3729);
                  break;
               case 346:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(3730, 3752);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 218:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(3150, 3151);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 352 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   350, 41, 351, 217, 5, 6, 28, 29, 33, 34, 38, 0, 221, 222, 236, 225, 
   42, 215, 216, 223, 224, 228, 229, 233, 234, 342, 343, 221, 308, 309, 311, 237, 
   312, 313, 320, 321, 222, 236, 225, 135, 136, 140, 141, 145, 146, 153, 42, 5, 
   6, 28, 29, 33, 34, 38, 0, 11, 12, 14, 15, 19, 20, 24, 9, 2, 
   3, 4, 36, 7, 11, 12, 14, 15, 19, 20, 24, 9, 2, 3, 10, 22, 
   11, 12, 14, 15, 19, 20, 24, 9, 2, 3, 22, 13, 11, 12, 14, 15, 
   19, 20, 24, 9, 2, 3, 22, 18, 21, 9, 2, 3, 22, 23, 11, 12, 
   14, 15, 19, 20, 24, 9, 2, 3, 22, 23, 5, 6, 28, 29, 33, 34, 
   38, 0, 11, 12, 14, 15, 19, 20, 24, 9, 2, 3, 36, 7, 27, 5, 
   6, 28, 29, 33, 34, 38, 0, 11, 12, 14, 15, 19, 20, 24, 9, 2, 
   3, 36, 7, 32, 35, 2, 3, 36, 7, 37, 5, 6, 28, 29, 33, 34, 
   38, 0, 11, 12, 14, 15, 19, 20, 24, 9, 2, 3, 36, 7, 37, 44, 
   45, 46, 134, 211, 212, 45, 46, 134, 211, 212, 46, 47, 52, 56, 49, 50, 
   89, 125, 86, 55, 50, 51, 86, 89, 125, 47, 51, 52, 56, 53, 54, 63, 
   57, 64, 65, 72, 47, 47, 50, 51, 52, 56, 89, 125, 86, 55, 48, 61, 
   87, 53, 54, 63, 57, 64, 65, 72, 47, 73, 74, 76, 68, 77, 78, 81, 
   82, 49, 50, 83, 84, 90, 91, 97, 98, 105, 106, 55, 62, 67, 60, 66, 
   49, 50, 55, 67, 60, 120, 53, 54, 63, 57, 64, 65, 72, 47, 73, 74, 
   76, 68, 77, 78, 81, 82, 49, 50, 83, 84, 90, 91, 97, 98, 105, 106, 
   55, 67, 60, 71, 53, 54, 63, 57, 64, 65, 72, 47, 73, 74, 76, 68, 
   77, 78, 81, 82, 49, 50, 83, 84, 90, 91, 97, 98, 105, 106, 55, 67, 
   60, 75, 79, 49, 50, 55, 67, 60, 80, 53, 54, 63, 57, 64, 65, 72, 
   47, 73, 74, 76, 68, 77, 78, 81, 82, 49, 50, 83, 84, 90, 91, 97, 
   98, 105, 106, 55, 67, 60, 80, 85, 86, 89, 125, 88, 47, 51, 52, 56, 
   86, 89, 125, 88, 53, 54, 63, 57, 64, 65, 72, 47, 83, 84, 90, 91, 
   97, 98, 105, 106, 48, 87, 95, 53, 54, 63, 57, 64, 65, 72, 47, 83, 
   84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 115, 116, 85, 
   88, 96, 100, 94, 99, 85, 88, 100, 94, 118, 53, 54, 63, 57, 64, 65, 
   72, 47, 83, 84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 
   115, 116, 85, 88, 100, 94, 104, 53, 54, 63, 57, 64, 65, 72, 47, 83, 
   84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 115, 116, 85, 
   88, 100, 94, 109, 113, 85, 88, 100, 94, 114, 53, 54, 63, 57, 64, 65, 
   72, 47, 83, 84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 
   115, 116, 85, 88, 100, 94, 114, 53, 54, 63, 57, 64, 65, 72, 47, 83, 
   84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 115, 116, 85, 
   88, 100, 94, 118, 53, 54, 63, 57, 64, 65, 72, 47, 83, 84, 90, 91, 
   97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 115, 116, 85, 88, 100, 94, 
   119, 53, 54, 63, 57, 64, 65, 72, 47, 73, 74, 76, 68, 77, 78, 81, 
   82, 49, 50, 83, 84, 90, 91, 97, 98, 105, 106, 55, 67, 60, 120, 53, 
   54, 63, 57, 64, 65, 72, 47, 73, 74, 76, 68, 77, 78, 81, 82, 49, 
   50, 83, 84, 90, 91, 97, 98, 105, 106, 55, 67, 60, 121, 53, 54, 63, 
   57, 64, 65, 72, 47, 83, 84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 
   101, 111, 112, 115, 116, 85, 88, 100, 94, 123, 53, 54, 63, 57, 64, 65, 
   72, 47, 83, 84, 90, 91, 97, 98, 105, 106, 107, 108, 110, 101, 111, 112, 
   115, 116, 85, 88, 126, 100, 94, 53, 54, 63, 57, 64, 65, 72, 47, 73, 
   74, 76, 68, 77, 78, 81, 82, 49, 50, 83, 84, 90, 91, 97, 98, 105, 
   106, 55, 67, 60, 130, 53, 54, 63, 57, 64, 65, 72, 47, 73, 74, 76, 
   68, 77, 78, 81, 82, 49, 50, 83, 84, 90, 91, 97, 98, 105, 106, 55, 
   132, 67, 60, 135, 136, 140, 141, 145, 146, 153, 42, 164, 165, 171, 172, 178, 
   179, 186, 167, 43, 138, 168, 135, 136, 140, 141, 145, 146, 153, 42, 154, 155, 
   157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 171, 172, 178, 179, 186, 167, 
   46, 139, 148, 137, 135, 136, 140, 141, 145, 146, 153, 42, 154, 155, 157, 149, 
   158, 159, 162, 163, 44, 45, 164, 165, 171, 172, 178, 179, 186, 167, 46, 148, 
   137, 144, 147, 44, 45, 46, 148, 137, 207, 135, 136, 140, 141, 145, 146, 153, 
   42, 154, 155, 157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 171, 172, 178, 
   179, 186, 167, 46, 148, 137, 152, 135, 136, 140, 141, 145, 146, 153, 42, 154, 
   155, 157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 171, 172, 178, 179, 186, 
   167, 46, 148, 137, 156, 160, 44, 45, 46, 148, 137, 161, 135, 136, 140, 141, 
   145, 146, 153, 42, 154, 155, 157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 
   171, 172, 178, 179, 186, 167, 46, 148, 137, 161, 167, 166, 169, 46, 170, 203, 
   167, 169, 46, 170, 203, 164, 165, 171, 172, 178, 179, 186, 167, 164, 165, 171, 
   172, 178, 179, 186, 167, 187, 188, 190, 182, 191, 192, 195, 196, 166, 169, 46, 
   175, 177, 181, 180, 166, 169, 46, 181, 175, 198, 164, 165, 171, 172, 178, 179, 
   186, 167, 187, 188, 190, 182, 191, 192, 195, 196, 166, 169, 46, 175, 181, 185, 
   164, 165, 171, 172, 178, 179, 186, 167, 187, 188, 190, 182, 191, 192, 195, 196, 
   166, 169, 46, 175, 181, 189, 193, 166, 169, 46, 175, 181, 194, 164, 165, 171, 
   172, 178, 179, 186, 167, 187, 188, 190, 182, 191, 192, 195, 196, 166, 169, 46, 
   175, 181, 194, 164, 165, 171, 172, 178, 179, 186, 167, 187, 188, 190, 182, 191, 
   192, 195, 196, 166, 169, 46, 181, 175, 198, 164, 165, 171, 172, 178, 179, 186, 
   167, 187, 188, 190, 182, 191, 192, 195, 196, 166, 169, 46, 181, 175, 199, 164, 
   165, 171, 172, 178, 179, 186, 167, 187, 188, 190, 182, 191, 192, 195, 196, 166, 
   169, 46, 181, 175, 201, 164, 165, 171, 172, 178, 179, 186, 167, 187, 188, 190, 
   182, 191, 192, 195, 196, 166, 169, 46, 204, 181, 175, 135, 136, 140, 141, 145, 
   146, 153, 42, 154, 155, 157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 171, 
   172, 178, 179, 186, 167, 46, 148, 137, 207, 135, 136, 140, 141, 145, 146, 153, 
   42, 154, 155, 157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 171, 172, 178, 
   179, 186, 167, 46, 148, 137, 208, 135, 136, 140, 141, 145, 146, 153, 42, 154, 
   155, 157, 149, 158, 159, 162, 163, 44, 45, 164, 165, 171, 172, 178, 179, 186, 
   167, 46, 213, 148, 137, 223, 224, 228, 229, 233, 234, 342, 343, 221, 308, 309, 
   311, 237, 312, 313, 320, 321, 222, 236, 225, 227, 223, 224, 228, 229, 233, 234, 
   342, 343, 221, 308, 309, 311, 237, 312, 313, 320, 321, 222, 236, 225, 236, 225, 
   232, 235, 221, 236, 225, 341, 240, 241, 242, 301, 302, 241, 242, 301, 302, 240, 
   241, 242, 244, 246, 276, 264, 245, 301, 302, 247, 248, 252, 253, 257, 258, 267, 
   268, 241, 269, 270, 272, 261, 273, 274, 281, 242, 282, 283, 285, 277, 286, 287, 
   290, 291, 244, 246, 276, 264, 245, 247, 248, 252, 253, 257, 258, 267, 268, 240, 
   241, 269, 270, 272, 261, 273, 274, 281, 242, 251, 260, 249, 247, 248, 252, 253, 
   257, 258, 267, 268, 240, 241, 269, 270, 272, 261, 273, 274, 281, 242, 260, 249, 
   256, 259, 240, 241, 260, 249, 294, 250, 243, 265, 247, 248, 252, 253, 257, 258, 
   267, 268, 241, 269, 270, 272, 261, 273, 274, 281, 242, 282, 283, 285, 277, 286, 
   287, 290, 291, 244, 246, 276, 264, 245, 266, 247, 248, 252, 253, 257, 258, 267, 
   268, 241, 269, 270, 272, 261, 273, 274, 281, 242, 282, 283, 285, 277, 286, 287, 
   290, 291, 244, 246, 276, 264, 245, 245, 276, 264, 271, 241, 275, 244, 245, 276, 
   264, 293, 247, 248, 252, 253, 257, 258, 267, 268, 241, 269, 270, 272, 261, 273, 
   274, 281, 242, 282, 283, 285, 277, 286, 287, 290, 291, 244, 246, 276, 264, 245, 
   276, 264, 245, 280, 247, 248, 252, 253, 257, 258, 267, 268, 241, 269, 270, 272, 
   261, 273, 274, 281, 242, 282, 283, 285, 277, 286, 287, 290, 291, 244, 246, 276, 
   264, 245, 276, 264, 245, 284, 241, 288, 244, 276, 264, 245, 289, 247, 248, 252, 
   253, 257, 258, 267, 268, 241, 269, 270, 272, 261, 273, 274, 281, 242, 282, 283, 
   285, 277, 286, 287, 290, 291, 244, 246, 276, 264, 245, 276, 264, 245, 289, 247, 
   248, 252, 253, 257, 258, 267, 268, 241, 269, 270, 272, 261, 273, 274, 281, 242, 
   282, 283, 285, 277, 286, 287, 290, 291, 244, 246, 276, 264, 245, 245, 276, 264, 
   293, 247, 248, 252, 253, 257, 258, 267, 268, 240, 241, 269, 270, 272, 261, 273, 
   274, 281, 242, 260, 249, 294, 247, 248, 252, 253, 257, 258, 267, 268, 240, 241, 
   269, 270, 272, 261, 273, 274, 281, 242, 260, 249, 295, 247, 248, 252, 253, 257, 
   258, 267, 268, 241, 269, 270, 272, 261, 273, 274, 281, 242, 282, 283, 285, 277, 
   286, 287, 290, 291, 244, 246, 276, 264, 245, 245, 276, 264, 297, 269, 270, 272, 
   261, 273, 274, 281, 242, 247, 248, 252, 253, 257, 258, 267, 268, 241, 269, 270, 
   272, 261, 273, 274, 281, 242, 282, 283, 285, 277, 286, 287, 290, 291, 244, 246, 
   276, 264, 245, 245, 303, 276, 264, 306, 332, 250, 243, 308, 309, 311, 237, 312, 
   313, 320, 321, 322, 323, 325, 316, 326, 327, 330, 331, 247, 248, 252, 253, 257, 
   258, 267, 268, 240, 241, 269, 270, 272, 261, 273, 274, 281, 242, 244, 315, 305, 
   334, 307, 315, 305, 308, 309, 311, 237, 312, 313, 320, 321, 322, 323, 325, 316, 
   326, 327, 330, 331, 247, 248, 252, 253, 257, 258, 267, 268, 240, 241, 269, 270, 
   272, 261, 273, 274, 281, 242, 244, 315, 305, 334, 315, 305, 310, 314, 240, 241, 
   244, 315, 305, 336, 308, 309, 311, 237, 312, 313, 320, 321, 322, 323, 325, 316, 
   326, 327, 330, 331, 247, 248, 252, 253, 257, 258, 267, 268, 240, 241, 269, 270, 
   272, 261, 273, 274, 281, 242, 244, 315, 305, 334, 319, 308, 309, 311, 237, 312, 
   313, 320, 321, 322, 323, 325, 316, 326, 327, 330, 331, 247, 248, 252, 253, 257, 
   258, 267, 268, 240, 241, 269, 270, 272, 261, 273, 274, 281, 242, 244, 315, 305, 
   334, 324, 328, 240, 241, 244, 315, 305, 329, 308, 309, 311, 237, 312, 313, 320, 
   321, 322, 323, 325, 316, 326, 327, 330, 331, 247, 248, 252, 253, 257, 258, 267, 
   268, 240, 241, 269, 270, 272, 261, 273, 274, 281, 242, 244, 315, 305, 334, 329, 
   308, 309, 311, 237, 312, 313, 320, 321, 322, 323, 325, 316, 326, 327, 330, 331, 
   247, 248, 252, 253, 257, 258, 267, 268, 240, 241, 269, 270, 272, 261, 273, 274, 
   281, 242, 244, 333, 315, 305, 334, 308, 309, 311, 237, 312, 313, 320, 321, 322, 
   323, 325, 316, 326, 327, 330, 331, 247, 248, 252, 253, 257, 258, 267, 268, 240, 
   241, 269, 270, 272, 261, 273, 274, 281, 242, 244, 315, 305, 334, 308, 309, 311, 
   237, 312, 313, 320, 321, 322, 323, 325, 316, 326, 327, 330, 331, 247, 248, 252, 
   253, 257, 258, 267, 268, 240, 241, 269, 270, 272, 261, 273, 274, 281, 242, 244, 
   315, 305, 334, 315, 305, 336, 308, 309, 311, 237, 312, 313, 320, 321, 322, 323, 
   325, 316, 326, 327, 330, 331, 247, 248, 252, 253, 257, 258, 267, 268, 240, 241, 
   269, 270, 272, 261, 273, 274, 281, 242, 244, 315, 305, 334, 315, 305, 339, 223, 
   224, 228, 229, 233, 234, 342, 343, 221, 308, 309, 311, 237, 312, 313, 320, 321, 
   222, 236, 225, 236, 225, 341, 223, 224, 228, 229, 233, 234, 342, 343, 221, 308, 
   309, 311, 237, 312, 313, 320, 321, 222, 236, 225, 236, 225, 344, 29, 30, 35, 
   2, 3, 7, 37, 36, 27, 36, 229, 230, 235, 221, 237, 238, 314, 240, 241, 
   244, 305, 336, 315, 310, 315, 225, 341, 236, 344, 236, 141, 142, 147, 44, 45, 
   46, 137, 207, 148, 208, 148, 2, 3, 4, 7, 40, 2, 3, 7, 27, 36, 
   9, 2, 3, 10, 26, 9, 2, 3, 13, 22, 9, 2, 3, 18, 25, 21, 
   9, 2, 3, 23, 22, 15, 16, 21, 9, 2, 3, 23, 22, 13, 22, 15, 
   16, 21, 9, 2, 3, 23, 22, 18, 25, 13, 22, 15, 16, 21, 9, 2, 
   3, 10, 26, 23, 22, 13, 22, 2, 3, 7, 32, 39, 35, 2, 3, 7, 
   37, 36, 29, 30, 35, 15, 16, 21, 9, 2, 3, 23, 22, 13, 22, 7, 
   37, 36, 27, 36, 29, 30, 35, 15, 16, 21, 9, 2, 3, 23, 22, 13, 
   22, 7, 37, 36, 32, 39, 27, 36, 29, 30, 35, 15, 16, 21, 9, 2, 
   3, 23, 22, 13, 22, 4, 7, 40, 37, 36, 27, 36, 44, 45, 46, 213, 
   137, 214, 49, 50, 55, 132, 60, 133, 49, 50, 55, 60, 121, 67, 57, 58, 
   66, 49, 50, 55, 60, 120, 67, 121, 67, 49, 50, 55, 60, 130, 131, 49, 
   50, 55, 62, 60, 129, 66, 49, 50, 55, 60, 120, 67, 57, 58, 66, 68, 
   69, 79, 49, 50, 91, 92, 99, 85, 88, 94, 118, 100, 119, 100, 55, 60, 
   80, 67, 75, 67, 60, 120, 67, 121, 67, 49, 50, 55, 60, 71, 128, 49, 
   50, 55, 60, 75, 67, 79, 49, 50, 55, 60, 80, 67, 85, 88, 94, 119, 
   100, 85, 88, 126, 94, 127, 85, 88, 94, 123, 124, 85, 88, 96, 94, 122, 
   99, 85, 88, 94, 118, 100, 57, 58, 66, 49, 50, 91, 92, 99, 101, 102, 
   113, 85, 88, 94, 114, 100, 109, 100, 94, 118, 100, 119, 100, 55, 60, 120, 
   67, 121, 67, 85, 88, 94, 104, 117, 85, 88, 94, 109, 100, 113, 85, 88, 
   94, 114, 100, 57, 58, 66, 49, 50, 91, 92, 99, 101, 102, 113, 85, 88, 
   94, 114, 100, 104, 117, 109, 100, 94, 118, 100, 119, 100, 55, 60, 120, 67, 
   121, 67, 57, 58, 66, 49, 50, 91, 92, 99, 101, 102, 113, 85, 88, 96, 
   94, 122, 114, 100, 109, 100, 94, 118, 100, 119, 100, 55, 60, 120, 67, 121, 
   67, 57, 58, 66, 49, 50, 91, 92, 99, 101, 102, 113, 85, 88, 94, 114, 
   100, 109, 100, 94, 118, 100, 123, 124, 119, 100, 55, 60, 120, 67, 121, 67, 
   57, 58, 66, 49, 50, 91, 92, 99, 85, 88, 94, 118, 100, 119, 100, 55, 
   60, 120, 67, 121, 67, 57, 58, 66, 49, 50, 91, 92, 99, 101, 102, 113, 
   85, 88, 94, 114, 100, 109, 100, 126, 94, 127, 118, 100, 119, 100, 55, 60, 
   120, 67, 121, 67, 57, 58, 66, 68, 69, 79, 49, 50, 91, 92, 99, 85, 
   88, 94, 118, 100, 119, 100, 55, 60, 80, 67, 71, 128, 75, 67, 60, 120, 
   67, 121, 67, 57, 58, 66, 68, 69, 79, 49, 50, 91, 92, 99, 85, 88, 
   94, 118, 100, 119, 100, 55, 62, 60, 129, 80, 67, 75, 67, 60, 120, 67, 
   121, 67, 57, 58, 66, 68, 69, 79, 49, 50, 91, 92, 99, 85, 88, 94, 
   118, 100, 119, 100, 55, 60, 80, 67, 75, 67, 60, 120, 67, 130, 131, 121, 
   67, 57, 58, 66, 68, 69, 79, 49, 50, 91, 92, 99, 85, 88, 94, 118, 
   100, 119, 100, 55, 60, 80, 67, 75, 67, 132, 60, 133, 120, 67, 121, 67, 
   44, 45, 46, 137, 208, 148, 44, 45, 46, 139, 137, 210, 44, 45, 46, 137, 
   144, 209, 147, 44, 45, 46, 137, 207, 148, 141, 142, 147, 149, 150, 160, 44, 
   45, 172, 173, 180, 166, 169, 46, 175, 198, 181, 199, 181, 137, 161, 148, 156, 
   148, 137, 207, 148, 208, 148, 44, 45, 46, 137, 152, 206, 44, 45, 46, 137, 
   156, 148, 160, 44, 45, 46, 137, 161, 148, 166, 169, 46, 175, 199, 181, 166, 
   169, 46, 204, 175, 205, 166, 169, 46, 175, 201, 202, 166, 169, 46, 175, 177, 
   200, 180, 166, 169, 46, 175, 198, 181, 172, 173, 180, 182, 183, 193, 166, 169, 
   46, 175, 194, 181, 189, 181, 175, 198, 181, 199, 181, 166, 169, 46, 175, 185, 
   197, 166, 169, 46, 175, 189, 181, 193, 166, 169, 46, 175, 194, 181, 172, 173, 
   180, 182, 183, 193, 166, 169, 46, 175, 194, 181, 185, 197, 189, 181, 175, 198, 
   181, 199, 181, 172, 173, 180, 182, 183, 193, 166, 169, 46, 175, 177, 200, 194, 
   181, 189, 181, 175, 198, 181, 199, 181, 172, 173, 180, 182, 183, 193, 166, 169, 
   46, 175, 194, 181, 189, 181, 175, 198, 181, 201, 202, 199, 181, 172, 173, 180, 
   166, 169, 46, 175, 198, 181, 199, 181, 172, 173, 180, 182, 183, 193, 166, 169, 
   46, 175, 194, 181, 189, 181, 204, 175, 205, 198, 181, 199, 181, 141, 142, 147, 
   149, 150, 160, 44, 45, 172, 173, 180, 166, 169, 46, 175, 198, 181, 199, 181, 
   137, 161, 148, 152, 206, 156, 148, 137, 207, 148, 208, 148, 141, 142, 147, 149, 
   150, 160, 44, 45, 172, 173, 180, 166, 169, 46, 175, 198, 181, 199, 181, 137, 
   161, 148, 156, 148, 137, 207, 148, 144, 209, 208, 148, 141, 142, 147, 149, 150, 
   160, 44, 45, 172, 173, 180, 166, 169, 46, 175, 198, 181, 199, 181, 139, 137, 
   210, 161, 148, 156, 148, 137, 207, 148, 208, 148, 141, 142, 147, 44, 45, 172, 
   173, 180, 166, 169, 46, 175, 198, 181, 199, 181, 137, 207, 148, 208, 148, 141, 
   142, 147, 149, 150, 160, 44, 45, 172, 173, 180, 166, 169, 46, 175, 198, 181, 
   199, 181, 137, 161, 148, 156, 148, 213, 137, 214, 207, 148, 208, 148, 218, 219, 
   221, 225, 344, 236, 221, 225, 227, 346, 221, 225, 232, 345, 235, 221, 225, 341, 
   236, 240, 241, 244, 305, 339, 340, 241, 244, 245, 303, 264, 304, 240, 241, 249, 
   295, 260, 240, 241, 251, 249, 300, 240, 241, 249, 256, 299, 259, 240, 241, 249, 
   294, 260, 253, 254, 259, 240, 241, 261, 262, 275, 244, 245, 264, 293, 276, 271, 
   276, 249, 294, 260, 295, 260, 241, 244, 245, 264, 297, 298, 241, 244, 264, 245, 
   266, 296, 241, 244, 245, 264, 271, 276, 241, 275, 244, 245, 264, 293, 276, 253, 
   254, 259, 240, 241, 261, 262, 275, 277, 278, 288, 244, 264, 245, 289, 276, 284, 
   276, 245, 264, 293, 276, 271, 276, 249, 294, 260, 295, 260, 241, 244, 264, 245, 
   280, 292, 241, 244, 264, 245, 284, 276, 241, 288, 244, 264, 245, 289, 276, 253, 
   254, 259, 240, 241, 261, 262, 275, 277, 278, 288, 244, 264, 245, 289, 276, 280, 
   292, 284, 276, 245, 264, 293, 276, 271, 276, 249, 294, 260, 295, 260, 253, 254, 
   259, 240, 241, 261, 262, 275, 277, 278, 288, 244, 264, 245, 266, 296, 264, 245, 
   289, 276, 284, 276, 245, 264, 293, 276, 271, 276, 249, 294, 260, 295, 260, 253, 
   254, 259, 240, 241, 261, 262, 275, 277, 278, 288, 244, 264, 245, 289, 276, 284, 
   276, 245, 264, 293, 276, 297, 298, 271, 276, 249, 294, 260, 295, 260, 253, 254, 
   259, 240, 241, 261, 262, 275, 244, 245, 264, 293, 276, 271, 276, 249, 294, 260, 
   256, 299, 295, 260, 253, 254, 259, 240, 241, 261, 262, 275, 244, 245, 264, 293, 
   276, 271, 276, 251, 249, 300, 294, 260, 295, 260, 241, 261, 262, 275, 244, 245, 
   264, 293, 276, 271, 276, 253, 254, 259, 240, 241, 261, 262, 275, 277, 278, 288, 
   244, 264, 245, 289, 276, 284, 276, 245, 303, 264, 304, 293, 276, 271, 276, 249, 
   294, 260, 295, 260, 240, 241, 244, 307, 305, 338, 240, 241, 244, 305, 310, 315, 
   314, 240, 241, 244, 305, 336, 315, 237, 238, 314, 316, 317, 328, 253, 254, 259, 
   240, 241, 261, 262, 275, 244, 245, 264, 293, 276, 271, 276, 249, 294, 260, 295, 
   260, 305, 329, 315, 324, 315, 305, 336, 315, 310, 315, 240, 241, 244, 305, 319, 
   337, 240, 241, 244, 305, 324, 315, 328, 240, 241, 244, 305, 329, 315, 240, 241, 
   244, 333, 305, 335, 237, 238, 314, 316, 317, 328, 253, 254, 259, 240, 241, 261, 
   262, 275, 244, 245, 264, 293, 276, 271, 276, 249, 294, 260, 295, 260, 333, 305, 
   335, 329, 315, 324, 315, 305, 336, 315, 310, 315, 237, 238, 314, 316, 317, 328, 
   253, 254, 259, 240, 241, 261, 262, 275, 244, 245, 264, 293, 276, 271, 276, 249, 
   294, 260, 295, 260, 305, 329, 315, 319, 337, 324, 315, 305, 336, 315, 310, 315, 
   237, 238, 314, 316, 317, 328, 253, 254, 259, 240, 241, 261, 262, 275, 244, 245, 
   264, 293, 276, 271, 276, 249, 294, 260, 295, 260, 305, 329, 315, 324, 315, 307, 
   305, 338, 336, 315, 310, 315, 237, 238, 314, 316, 317, 328, 253, 254, 259, 240, 
   241, 261, 262, 275, 244, 245, 264, 293, 276, 271, 276, 249, 294, 260, 295, 260, 
   305, 329, 315, 324, 315, 305, 336, 315, 339, 340, 310, 315, 229, 230, 235, 221, 
   237, 238, 314, 240, 241, 244, 305, 336, 315, 310, 315, 225, 341, 236, 232, 345, 
   344, 236, 229, 230, 235, 221, 237, 238, 314, 240, 241, 244, 305, 336, 315, 310, 
   315, 225, 227, 346, 225, 341, 236, 344, 236, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, "\50", "\51", "\11", null, "\42", null, null, null, null, null, 
null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[352];
private final int[] jjstateSet = new int[704];
protected char curChar;
/** Constructor. */
public DPLMusicCompileMagicTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public DPLMusicCompileMagicTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 352; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
         matchedToken = jjFillToken();
         return matchedToken;
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
